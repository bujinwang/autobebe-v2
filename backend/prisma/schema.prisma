generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  CLINIC_ADMIN
  STAFF
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  name         String
  role         UserRole      @default(STAFF)
  clinicId     String?       @db.VarChar(50)
  position     String?       // Job title/position
  specialty    String?       // Medical specialty
  isActive     Boolean       @default(true) // Employment status
  createdAt    DateTime      @default(now())
  appointments Appointment[] @relation("DoctorAppointments")
  clinic       ClinicInfo?   @relation(fields: [clinicId], references: [id])
}

model Patient {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(100)
  phone        String?       @db.VarChar(20)
  createdAt    DateTime      @default(now())
  clinicId     String        @db.VarChar(50)
  appointments Appointment[]
  clinic       ClinicInfo    @relation(fields: [clinicId], references: [id])
}

model ClinicInfo {
  id             String        @id
  name           String        @db.VarChar(100)
  address        String        @db.VarChar(200)
  phone          String        @db.VarChar(20)
  company        String        @db.VarChar(100)
  createdAt      DateTime      @default(now())
  hours          String        @db.VarChar(200)
  updatedAt      DateTime      @default(now()) @updatedAt
  welcomeMessage String
  appointments   Appointment[]
  patients       Patient[]
  users          User[]
}

model Appointment {
  id                     Int        @id @default(autoincrement())
  patientId              Int
  clinicId               String
  appointmentDate        DateTime
  status                 String
  followUpQuestions      String
  followUpAnswers        String
  possibleTreatments     String
  suggestedPrescriptions String
  purposeOfVisit         String?
  symptoms               String?
  doctorId               Int?
  clinic                 ClinicInfo @relation(fields: [clinicId], references: [id])
  doctor                 User?      @relation("DoctorAppointments", fields: [doctorId], references: [id])
  patient                Patient    @relation(fields: [patientId], references: [id])

  @@index([patientId], map: "IX_Appointments_PatientId")
  @@index([doctorId], map: "IX_Appointments_DoctorId")
}
